{
    "version": 3,
    "sources": [
        "adapter.js"
    ],
    "names": [
        "fileCache",
        "require",
        "nunjucks",
        "fileSession",
        "mysql",
        "Console",
        "File",
        "DateFile",
        "path",
        "isDev",
        "think",
        "env",
        "exports",
        "cache",
        "type",
        "common",
        "timeout",
        "file",
        "handle",
        "cachePath",
        "join",
        "ROOT_PATH",
        "pathDepth",
        "gcInterval",
        "model",
        "logConnect",
        "logSql",
        "logger",
        "msg",
        "info",
        "database",
        "prefix",
        "encoding",
        "host",
        "port",
        "user",
        "password",
        "dateStrings",
        "mongo",
        "options",
        "session",
        "cookie",
        "name",
        "sessionPath",
        "view",
        "viewPath",
        "sep",
        "extname",
        "console",
        "backups",
        "absolute",
        "maxLogSize",
        "filename",
        "dateFile",
        "level",
        "pattern",
        "alwaysIncludePattern"
    ],
    "mappings": "AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAD,CAAzB;;AAEA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,qBAAD,CAAxB;;AAEA,MAAME,WAAW,GAAGF,OAAO,CAAC,oBAAD,CAA3B;;AAEA,MAAMG,KAAK,GAAGH,OAAO,CAAC,mBAAD,CAArB;;AAEA,MAAM;AACJI,EAAAA,OADI;AAEJC,EAAAA,IAFI;AAGJC,EAAAA;AAHI,IAIFN,OAAO,CAAC,eAAD,CAJX;;AAMA,MAAMO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMQ,KAAK,GAAGC,KAAK,CAACC,GAAN,KAAc,aAA5B;AACA;AACA;AACA;AACA;;AAEAC,OAAO,CAACC,KAAR,GAAgB;AACdC,EAAAA,IAAI,EAAE,MADQ;AAEdC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,KAAK,EAAL,GAAU,EAAV,GAAe,IADlB,CACuB;;AADvB,GAFM;AAMdC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAElB,SADJ;AAEJmB,IAAAA,SAAS,EAAEX,IAAI,CAACY,IAAL,CAAUV,KAAK,CAACW,SAAhB,EAA2B,eAA3B,CAFP;AAGJ;AACAC,IAAAA,SAAS,EAAE,CAJP;AAKJC,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU,EAAV,GAAe,IALvB,CAK4B;;AAL5B;AANQ,CAAhB;AAeA;AACA;AACA;AACA;;AAEAX,OAAO,CAACY,KAAR,GAAgB;AACdV,EAAAA,IAAI,EAAE,OADQ;AAEdC,EAAAA,MAAM,EAAE;AACNU,IAAAA,UAAU,EAAEhB,KADN;AAENiB,IAAAA,MAAM,EAAEjB,KAFF;AAGNkB,IAAAA,MAAM,EAAEC,GAAG,IAAIlB,KAAK,CAACiB,MAAN,CAAaE,IAAb,CAAkBD,GAAlB;AAHT,GAFM;AAOdxB,EAAAA,KAAK,EAAE;AACLc,IAAAA,MAAM,EAAEd,KADH;AAEL0B,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,MAAM,EAAE,QAHH;AAILC,IAAAA,QAAQ,EAAE,MAJL;AAKLC,IAAAA,IAAI,EAAE,WALD;AAMLC,IAAAA,IAAI,EAAE,EAND;AAOLC,IAAAA,IAAI,EAAE,MAPD;AAQLC,IAAAA,QAAQ,EAAE,MARL;AASLC,IAAAA,WAAW,EAAE;AATR;AAPO,CAAhB;AAmBAzB,OAAO,CAACY,KAAR,GAAgB;AACdV,EAAAA,IAAI,EAAE,OADQ;AAEd;AACAC,EAAAA,MAAM,EAAE;AACN;AACAU,IAAAA,UAAU,EAAE,IAFN;AAGN;AACAE,IAAAA,MAAM,EAAEC,GAAG,IAAIlB,KAAK,CAACiB,MAAN,CAAaE,IAAb,CAAkBD,GAAlB,CAJT,CAIgC;;AAJhC,GAHM;AAUdU,EAAAA,KAAK,EAAE;AACLL,IAAAA,IAAI,EAAE,WADD;AAELC,IAAAA,IAAI,EAAE,KAFD;AAGLC,IAAAA,IAAI,EAAE,EAHD;AAILC,IAAAA,QAAQ,EAAE,EAJL;AAKLN,IAAAA,QAAQ,EAAE,QALL;AAML;AACAS,IAAAA,OAAO,EAAE,CAAC;AACR;AACA;AAFO;AAPJ;AAVO,CAAhB;AAuBA;AACA;AACA;AACA;;AAEA3B,OAAO,CAAC4B,OAAR,GAAkB;AAChB1B,EAAAA,IAAI,EAAE,MADU;AAEhBC,EAAAA,MAAM,EAAE;AACN0B,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE,SADA,CACU;AAChB;;AAFM;AADF,GAFQ;AAShBzB,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAEf,WADJ;AAEJwC,IAAAA,WAAW,EAAEnC,IAAI,CAACY,IAAL,CAAUV,KAAK,CAACW,SAAhB,EAA2B,iBAA3B;AAFT;AATU,CAAlB;AAcA;AACA;AACA;AACA;;AAEAT,OAAO,CAACgC,IAAR,GAAe;AACb9B,EAAAA,IAAI,EAAE,UADO;AAEbC,EAAAA,MAAM,EAAE;AACN8B,IAAAA,QAAQ,EAAErC,IAAI,CAACY,IAAL,CAAUV,KAAK,CAACW,SAAhB,EAA2B,MAA3B,CADJ;AAENyB,IAAAA,GAAG,EAAE,GAFC;AAGNC,IAAAA,OAAO,EAAE;AAHH,GAFK;AAOb7C,EAAAA,QAAQ,EAAE;AACRgB,IAAAA,MAAM,EAAEhB;AADA;AAPG,CAAf;AAWA;AACA;AACA;AACA;;AAEAU,OAAO,CAACe,MAAR,GAAiB;AACfb,EAAAA,IAAI,EAAEL,KAAK,GAAG,SAAH,GAAe,UADX;AAEfuC,EAAAA,OAAO,EAAE;AACP9B,IAAAA,MAAM,EAAEb;AADD,GAFM;AAKfY,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAEZ,IADJ;AAEJ2C,IAAAA,OAAO,EAAE,EAFL;AAGJ;AACAC,IAAAA,QAAQ,EAAE,IAJN;AAKJC,IAAAA,UAAU,EAAE,KAAK,IALb;AAMJ;AACAC,IAAAA,QAAQ,EAAE5C,IAAI,CAACY,IAAL,CAAUV,KAAK,CAACW,SAAhB,EAA2B,cAA3B;AAPN,GALS;AAcfgC,EAAAA,QAAQ,EAAE;AACRnC,IAAAA,MAAM,EAAEX,QADA;AAER+C,IAAAA,KAAK,EAAE,KAFC;AAGRJ,IAAAA,QAAQ,EAAE,IAHF;AAIRK,IAAAA,OAAO,EAAE,aAJD;AAKRC,IAAAA,oBAAoB,EAAE,IALd;AAMRJ,IAAAA,QAAQ,EAAE5C,IAAI,CAACY,IAAL,CAAUV,KAAK,CAACW,SAAhB,EAA2B,cAA3B;AANF;AAdK,CAAjB",
    "sourcesContent": [
        "\"use strict\";\n\nconst fileCache = require('think-cache-file');\n\nconst nunjucks = require('think-view-nunjucks');\n\nconst fileSession = require('think-session-file');\n\nconst mysql = require('think-model-mysql');\n\nconst {\n  Console,\n  File,\n  DateFile\n} = require('think-logger3');\n\nconst path = require('path');\n\nconst isDev = think.env === 'development';\n/**\n * cache adapter config\n * @type {Object}\n */\n\nexports.cache = {\n  type: 'file',\n  common: {\n    timeout: 24 * 60 * 60 * 1000 // millisecond\n\n  },\n  file: {\n    handle: fileCache,\n    cachePath: path.join(think.ROOT_PATH, 'runtime/cache'),\n    // absoulte path is necessarily required\n    pathDepth: 1,\n    gcInterval: 24 * 60 * 60 * 1000 // gc interval\n\n  }\n};\n/**\n * model adapter config\n * @type {Object}\n */\n\nexports.model = {\n  type: 'mysql',\n  common: {\n    logConnect: isDev,\n    logSql: isDev,\n    logger: msg => think.logger.info(msg)\n  },\n  mysql: {\n    handle: mysql,\n    database: '',\n    prefix: 'think_',\n    encoding: 'utf8',\n    host: '127.0.0.1',\n    port: '',\n    user: 'root',\n    password: 'root',\n    dateStrings: true\n  }\n};\nexports.model = {\n  type: 'mongo',\n  // 默认使用的类型，调用时可以指定参数切换\n  common: {\n    // 通用配置\n    logConnect: true,\n    // 是否打印数据库连接信息\n    logger: msg => think.logger.info(msg) // 打印信息的 logger\n\n  },\n  mongo: {\n    host: '127.0.0.1',\n    port: 27017,\n    user: '',\n    password: '',\n    database: 'runoob',\n    // 数据库名称\n    options: {// 身份验证相关\n      // replicaSet: 'mgset-3074013',\n      // authSource: 'admin'\n    }\n  }\n};\n/**\n * session adapter config\n * @type {Object}\n */\n\nexports.session = {\n  type: 'file',\n  common: {\n    cookie: {\n      name: 'thinkjs' // keys: ['werwer', 'werwer'],\n      // signed: true\n\n    }\n  },\n  file: {\n    handle: fileSession,\n    sessionPath: path.join(think.ROOT_PATH, 'runtime/session')\n  }\n};\n/**\n * view adapter config\n * @type {Object}\n */\n\nexports.view = {\n  type: 'nunjucks',\n  common: {\n    viewPath: path.join(think.ROOT_PATH, 'view'),\n    sep: '_',\n    extname: '.html'\n  },\n  nunjucks: {\n    handle: nunjucks\n  }\n};\n/**\n * logger adapter config\n * @type {Object}\n */\n\nexports.logger = {\n  type: isDev ? 'console' : 'dateFile',\n  console: {\n    handle: Console\n  },\n  file: {\n    handle: File,\n    backups: 10,\n    // max chunk number\n    absolute: true,\n    maxLogSize: 50 * 1024,\n    // 50M\n    filename: path.join(think.ROOT_PATH, 'logs/app.log')\n  },\n  dateFile: {\n    handle: DateFile,\n    level: 'ALL',\n    absolute: true,\n    pattern: '-yyyy-MM-dd',\n    alwaysIncludePattern: true,\n    filename: path.join(think.ROOT_PATH, 'logs/app.log')\n  }\n};\n//# sourceMappingURL=adapter.js.map"
    ],
    "file": "adapter.js"
}